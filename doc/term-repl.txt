*term-repl.txt*  Simple plugin which makes life easier when working with REPLs
in Neovim

Author:  Sebastian Pech
Repo:    https://github.com/sebastianpech/term-repl
License: MIT

INTRODUCTION                                    *term-repl*

This plugin provides functions which make working with any REPL in Neovim easy.

Send a line from normal mode:

    nnoremap <F8> :call SendLine()<CR>

Send visual selection:

    vnoremap <F8> :call SendLines()<CR>

Close Terminal before sending the line:

    nnoremap <F20> :call CloseTerminal() <bar> :call SendLine() <CR>

    I remapped this to shif + F8. To find the keycode for another terminal or 
    gui goto insert mode and firts press <c-v> than press shift + F8.

Example implementaion for julia to include the current file

    augroup default_repls
        autocmd FileType julia nnoremap <F10> :call SendLine("include(\"".expand("%")."\")")<CR>
    augroup END

Set a different name for the REPL process for the current language.

    autocmd FileType python let b:REPL ='ipython'

COMMANDS                                        *term-repl-commands*

:AttachTo

            Attach a terminal to the current buffer. This is only needed in
            special cases, like when the terminal buffer was created with
            :terminal so the spawned process is bash. That way the buffer
            can not be found by the name of the spawned process.

            The command shows the user a list of available terminal buffers and
            attaches to the user input.

